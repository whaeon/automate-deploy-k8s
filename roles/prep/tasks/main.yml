---
- name: install docker and docker-compose
  become: true
  ansible.builtin.script: initialization_docker_env.sh {{ ansible_ssh_user }}
  args:
    creates: /usr/local/bin/docker-compose

- name: modify docker cgroups
  become: true
  ansible.builtin.copy:
    src: daemon.json
    dest: /etc/docker/

- name: resolve "bridge-nf-call-iptables does not exist" error
  become: true
  ansible.builtin.command:
    cmd: modprobe br_netfilter
    creates: /proc/sys/net/bridge/bridge-nf-call-iptables

- name: enable ip forward
  become: true
  ansible.builtin.command:
    cmd: sed -i 's/^#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf

- name: reload sysctl.conf
  become: true
  ansible.builtin.command:
    cmd: sysctl -p

- name: restart docker daemon process
  become: true
  ansible.builtin.command:
    cmd: systemctl daemon-reload

- name: restart docker service
  become: true
  ansible.builtin.command:
    cmd: systemctl restart docker

- name: update repository and install packages
  become: true
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
    update_cache: yes

- name: prep k8s source list file
  become: true
  ansible.builtin.script: prep_k8s_repo.sh

- name: update k8s repository and install kubeadm/kubelet/kubectl
  become: true
  apt:
    name:
      - kubeadm=1.22.5-00
      - kubelet=1.22.5-00
      - kubectl=1.22.5-00
    update_cache: yes

- name: enable kubelet service
  become: true
  ansible.builtin.command:
    cmd: systemctl enable kubelet
    creates: /etc/systemd/system/multi-user.target.wants/kubelet.service
