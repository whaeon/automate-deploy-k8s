---
# tasks file for /home/chessman/chessman/gitlab/myself/k8s-ansible/roles/prep
# remove docker initialization script, kubernetes removed dockershim after 1.24.0
# - name: install docker and docker-compose
#   become: true
#   ansible.builtin.script: initialization_docker_env.sh {{ ansible_ssh_user }}
#   args:
#     creates: /usr/local/bin/docker-compose

# - name: modify docker cgroups
#   become: true
#   ansible.builtin.copy:
#     src: daemon.json
#     dest: /etc/docker/

- name: download containerd
  become: true
  ansible.builtin.command:
    cmd: wget https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz -P /user/home/developer
    creates: /user/home/developer/containerd-1.6.8-linux-amd64.tar.gz

- name: install containerd
  become: true
  ansible.builtin.command:
    cmd: tar Cxzvf /usr/local /user/home/developer/containerd-1.6.8-linux-amd64.tar.gz
    creates: /usr/local/bin/containerd

- name: download containerd systemd profile
  become: true
  ansible.builtin.command:
    cmd: wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service -P /usr/local/lib/systemd/system/
    creates: /usr/local/lib/systemd/system/containerd.service

- name: download runc binary files
  become: true
  ansible.builtin.command:
    cmd: wget https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64 -P /user/home/developer
    creates: /user/home/developer/runc.amd64

- name: install runc
  become: true
  ansible.builtin.command:
    cmd: install -m 755 /user/home/developer/runc.amd64 /usr/local/sbin/runc
    creates: /usr/local/sbin/runc

- name: load containerd profile
  become: true
  ansible.builtin.command:
    cmd: systemctl daemon-reload

- name: enable and start containerd
  become: true
  ansible.builtin.command:
    cmd: systemctl enable --now containerd

- name: download cni plugins
  become: true
  ansible.builtin.command:
    cmd: wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz -P /user/home/developer
    creates: /user/home/developer/cni-plugins-linux-amd64-v1.1.1.tgz

- name: create dir save cni plugins
  become: true
  ansible.builtin.command:
    cmd: mkdir -p /opt/cni/bin
    creates: /opt/cni/bin 

- name: installing cni plugins
  become: true
  ansible.builtin.command:
    cmd: tar Cxzvf /opt/cni/bin /user/home/developer/cni-plugins-linux-amd64-v1.1.1.tgz
    creates: /opt/cni/bin/dhcp 

# - name: resolve "bridge-nf-call-iptables does not exist" error
#   become: true
#   ansible.builtin.command:
#     cmd: sed -i '$a\net.bridge.bridge-nf-call-iptables = 1' /etc/sysctl.conf
#     creates: /proc/sys/net/bridge/bridge-nf-call-iptables

- name: resolve "bridge-nf-call-iptables does not exist" error
  become: true
  ansible.builtin.command:
    cmd: modprobe br_netfilter
    creates: /proc/sys/net/bridge/bridge-nf-call-iptables

- name: enable ip forward
  become: true
  ansible.builtin.command:
    cmd: sed -i 's/^#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf

- name: reload sysctl.conf
  become: true
  ansible.builtin.command:
    cmd: sysctl -p

# - name: restart docker daemon process
#   become: true
#   ansible.builtin.command:
#     cmd: systemctl daemon-reload

# - name: restart docker service
#   become: true
#   ansible.builtin.command:
#     cmd: systemctl restart docker

- name: update repository and install packages
  become: true
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
    update_cache: yes

- name: prep k8s source list file
  become: true
  ansible.builtin.script: prep_k8s_repo.sh

- name: update k8s repository and install kubeadm/kubelet/kubectl
  become: true
  apt:
    name:
      - kubeadm
      - kubelet
      - kubectl
    update_cache: yes

- name: enable kubelet service
  become: true
  ansible.builtin.command:
    cmd: systemctl enable kubelet
    creates: /etc/systemd/system/multi-user.target.wants/kubelet.service
